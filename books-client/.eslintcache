[{"C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\index.js":"1","C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\pages\\Books.js":"2","C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\components\\BooksList.js":"3","C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\components\\AddPublisher.js":"4","C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\components\\AddBook.js":"5","C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\pages\\Home.js":"6","C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\http-common.js":"7","C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\aws-exports.js":"8","C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\services\\BookService.js":"9","C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\services\\PublisherService.js":"10","C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\components\\PublishersList.js":"11","C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\App.js":"12","C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\components\\Book.js":"13"},{"size":478,"mtime":1606738902325,"results":"14","hashOfConfig":"15"},{"size":1807,"mtime":1608306949712,"results":"16","hashOfConfig":"15"},{"size":5591,"mtime":1607954550143,"results":"17","hashOfConfig":"15"},{"size":3101,"mtime":1607090293232,"results":"18","hashOfConfig":"15"},{"size":5837,"mtime":1608407597363,"results":"19","hashOfConfig":"15"},{"size":921,"mtime":1607791578737,"results":"20","hashOfConfig":"15"},{"size":535,"mtime":1608417727300,"results":"21","hashOfConfig":"15"},{"size":469,"mtime":1607798491577,"results":"22","hashOfConfig":"15"},{"size":902,"mtime":1608651279109,"results":"23","hashOfConfig":"15"},{"size":627,"mtime":1608299001304,"results":"24","hashOfConfig":"15"},{"size":3889,"mtime":1607524408675,"results":"25","hashOfConfig":"15"},{"size":1049,"mtime":1608306979472,"results":"26","hashOfConfig":"15"},{"size":7806,"mtime":1607519384172,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"v6yi0k",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},"C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\index.js",[],["63","64"],"C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\pages\\Books.js",[],"C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\components\\BooksList.js",["65","66","67","68","69"],"import React, { useState, useEffect } from \"react\";\r\nimport BookDataService from \"../services/BookService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Home from \"../pages/Home\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport PublisherDataService from \"../services/PublisherService\";\r\n\r\nconst BooksList = () => {\r\n  const [books, setBooks, publisherName, setPublisherName] = useState([]);\r\n  const [currentBook, setCurrentBook] = useState(null);\r\n  const [currentIndex, setCurrentIndex] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    retrieveBooks();\r\n    getPublisherById();\r\n  }, []);\r\n\r\n  const retrieveBooks = () => {\r\n    BookDataService.getAll()\r\n      .then((response) => {\r\n        setBooks(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const getPublisherById = (id) => {\r\n    PublisherDataService.findPublisherName(id).then((response) => {\r\n      return response.data;\r\n    });\r\n  };\r\n\r\n  const refreshList = () => {\r\n    retrieveBooks();\r\n    setCurrentBook(null);\r\n    setCurrentIndex(-1);\r\n  };\r\n\r\n  const setActiveBook = (book, index) => {\r\n    PublisherDataService.findPublisherName(book.publisher).then((response) => {\r\n      book.publisher = response.data;\r\n      setCurrentBook(book);\r\n      setCurrentIndex(index);\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    { dataField: \"id\", hidden: true },\r\n    {\r\n      dataField: \"title\",\r\n      text: \"Book Title ^\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"author\",\r\n      text: \"Author ^\",\r\n      sort: true,\r\n    },\r\n  ];\r\n\r\n  const tableRowEvents = {\r\n    onClick: (e, row, rowIndex) => {\r\n      setActiveBook(row, rowIndex);\r\n    },\r\n  };\r\n\r\n  const borderStyle = {\r\n    backgroundColor: \"white\",\r\n    padding: \"10px\",\r\n    borderRadius: \"5px\",\r\n  };\r\n\r\n  const { SearchBar } = Search;\r\n\r\n  return (\r\n    <div>\r\n      <Home />\r\n      <div className=\"jumbotron\">\r\n        <h2 className=\"text-info text-center\">Add, remove, update books.</h2>\r\n        <hr />\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\"></div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <h4>The library's books</h4>\r\n              <ToolkitProvider\r\n                keyField=\"id\"\r\n                data={books}\r\n                columns={columns}\r\n                search\r\n              >\r\n                {(props) => (\r\n                  <div>\r\n                    <SearchBar {...props.searchProps} />\r\n                    <hr />\r\n                    <BootstrapTable\r\n                      {...props.baseProps}\r\n                      className=\"bg-white\"\r\n                      keyField=\"id\"\r\n                      rowEvents={tableRowEvents}\r\n                      striped\r\n                      hover\r\n                      condensed\r\n                    />\r\n                  </div>\r\n                )}\r\n              </ToolkitProvider>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              {currentBook ? (\r\n                <div\r\n                  className=\"bg-white border border-info\"\r\n                  style={borderStyle}\r\n                >\r\n                  <h4>Book</h4>\r\n                  <hr />\r\n                  <div>\r\n                    <label>\r\n                      <strong>Title:</strong>\r\n                    </label>{\" \"}\r\n                    {currentBook.title}\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <strong>Author:</strong>\r\n                    </label>{\" \"}\r\n                    {currentBook.author}\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <strong>Rating:</strong>\r\n                    </label>{\" \"}\r\n                    {currentBook.rating}\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <strong>Pages:</strong>\r\n                    </label>{\" \"}\r\n                    {currentBook.pages}\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <strong>Language:</strong>\r\n                    </label>{\" \"}\r\n                    {currentBook.language}\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <strong>Description:</strong>\r\n                    </label>{\" \"}\r\n                    {currentBook.description}\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <strong>Publisher:</strong>\r\n                    </label>{\" \"}\r\n                    {currentBook.publisher}\r\n                  </div>\r\n                  <div>\r\n                    <label>\r\n                      <strong>Status:</strong>\r\n                    </label>{\" \"}\r\n                    {currentBook.published ? \"Published\" : \"Pending\"}\r\n                  </div>\r\n\r\n                  <Link\r\n                    to={\"/books/\" + currentBook.id}\r\n                    className=\"badge badge-warning\"\r\n                  >\r\n                    Edit\r\n                  </Link>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <br />\r\n                  <p>Please click on a Book...</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BooksList;\r\n","C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\components\\AddPublisher.js",[],["70","71"],"C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\components\\AddBook.js",["72"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport BookDataService from \"../services/BookService\";\r\nimport PublisherDataService from \"../services/PublisherService\";\r\nimport Select from \"react-select\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AddBook = () => {\r\n  const { register, handleSubmit, errors, formState } = useForm();\r\n  const [options, setOptions] = useState([]);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    getOptions();\r\n  }, []);\r\n\r\n  const initialBookState = {\r\n    id: null,\r\n    title: \"\",\r\n    author: \"\",\r\n    rating: \"\",\r\n    pages: \"\",\r\n    language: \"\",\r\n    description: \"\",\r\n    //   publisher: { options },\r\n    published: false,\r\n  };\r\n  const [book, setBook] = useState(initialBookState);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setBook({ ...book, [name]: value });\r\n  };\r\n\r\n  const saveBook = () => {\r\n    var data = {\r\n      title: book.title,\r\n      author: book.author,\r\n      rating: book.rating,\r\n      pages: book.pages,\r\n      language: book.language,\r\n      description: book.description,\r\n      publisher: options.value,\r\n      published: book.published,\r\n    };\r\n\r\n    BookDataService.create(data)\r\n      .then((response) => {\r\n        setBook({\r\n          id: response.data.id,\r\n          title: response.data.title,\r\n          author: response.data.author,\r\n          rating: response.data.rating,\r\n          pages: response.data.pages,\r\n          language: response.data.language,\r\n          description: response.data.description,\r\n          publisher: response.data.publisher,\r\n          published: response.data.published,\r\n        });\r\n        setSubmitted(true);\r\n        history.push(\"/books\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  const onSubmit = (data, e) => {\r\n    if (formState.errors.data) return;\r\n    saveBook();\r\n  };\r\n\r\n  const getOptions = () => {\r\n    PublisherDataService.getDropDown()\r\n      .then((response) => {\r\n        setOptions(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form className=\"submit-form\" onSubmit={handleSubmit(onSubmit)}>\r\n      <div>\r\n        <h1 className=\"text-center text-info\">Add Book</h1>\r\n        <hr />\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"title\">\r\n            Title<span className=\"text-danger\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            ref={register({ required: true })}\r\n            id=\"title\"\r\n            value={book.title}\r\n            onChange={handleInputChange}\r\n            name=\"title\"\r\n          />\r\n          <span className=\"text-danger\">\r\n            {errors.title && \"Title is required\"}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"author\">\r\n            Author<span className=\"text-danger\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"auth\"\r\n            value={book.author}\r\n            ref={register({ required: true })}\r\n            onChange={handleInputChange}\r\n            name=\"author\"\r\n          />\r\n          <span className=\"text-danger\">\r\n            {errors.author && \"Author is required\"}\r\n          </span>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"rating\">Rating</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            ref={register({ min: 0, max: 5 })}\r\n            id=\"title\"\r\n            value={book.rating}\r\n            onChange={handleInputChange}\r\n            name=\"rating\"\r\n          />\r\n          <span className=\"text-danger\">\r\n            {errors.rating &&\r\n              \"Invalid number for rating. Add a number between 0 and 5.\"}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"pages\">\r\n            Pages<span className=\"text-danger\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"pages\"\r\n            ref={register({ min: 0, required: true })}\r\n            value={book.pages}\r\n            onChange={handleInputChange}\r\n            name=\"pages\"\r\n          />\r\n          <span className=\"text-danger\">\r\n            {errors.pages?.type === \"required\" && \"Pages is required\"}\r\n            {errors.pages?.type === \"min\" &&\r\n              \"Please add a positive number for pages.\"}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"language\">Language</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"language\"\r\n            value={book.language}\r\n            onChange={handleInputChange}\r\n            name=\"language\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"description\">Description</label>\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Add a short description for this book.\"\r\n            id=\"description\"\r\n            value={book.description}\r\n            onChange={handleInputChange}\r\n            name=\"description\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"publisher\">Publisher</label>\r\n          <Select onChange={setOptions} options={options} />\r\n        </div>\r\n        <br></br>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default AddBook;\r\n","C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\pages\\Home.js",[],"C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\http-common.js",[],"C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\aws-exports.js",[],"C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\services\\BookService.js",["73"],"C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\services\\PublisherService.js",["74"],"import http from \"../http-common\";\r\n\r\nconst getAll = () => {\r\n  return http.get(\"/publishers\");\r\n};\r\n\r\nconst getDropDown = () => {\r\n  return http.get(\"/publishersDropDown\");\r\n};\r\n\r\nconst get = (id) => {\r\n  return http.get(`/publishers/${id}`);\r\n};\r\n\r\nconst create = (data) => {\r\n  return http.post(\"/publishers\", data);\r\n};\r\n\r\nconst findPublisherName = (id) => {\r\n  return http.get(`/books/publishers/${id}`);\r\n};\r\n\r\nconst getBooksByPublisherId = (id) => {\r\n  return http.get(`/publishers/books/${id}`);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  getDropDown,\r\n  get,\r\n  create,\r\n  findPublisherName,\r\n  getBooksByPublisherId,\r\n};\r\n","C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\components\\PublishersList.js",["75","76","77","78"],"import React, { useState, useEffect } from \"react\";\r\nimport PublisherDataService from \"../services/PublisherService\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\n\r\nconst PublishersList = () => {\r\n  const [publishers, setPublishers] = useState([]);\r\n  const [publisherBooks, setPublisherBooks] = useState([]);\r\n  const [currentPublisher, setCurrentPublisher] = useState(null);\r\n  const [currentIndex, setCurrentIndex] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    retrievePublishers();\r\n  }, []);\r\n\r\n  const retrievePublishers = () => {\r\n    PublisherDataService.getAll()\r\n      .then((response) => {\r\n        setPublishers(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const refreshList = () => {\r\n    retrievePublishers();\r\n    setCurrentPublisher(null);\r\n    setCurrentIndex(-1);\r\n  };\r\n\r\n  const setActivePublisher = (publisher, index) => {\r\n    PublisherDataService.getBooksByPublisherId(publisher.id).then(\r\n      (response) => {\r\n        publisher.books = response.data;\r\n        console.log(publisher.books);\r\n\r\n        setCurrentPublisher(publisher);\r\n        setCurrentIndex(index);\r\n      }\r\n    );\r\n  };\r\n\r\n  const columns = [\r\n    { dataField: \"id\", hidden: true },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Publisher ^\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"location\",\r\n      text: \"Location ^\",\r\n      sort: true,\r\n    },\r\n  ];\r\n\r\n  const tableRowEvents = {\r\n    onClick: (e, row, rowIndex) => {\r\n      console.log(`clicked on row with index: ${row.data}`);\r\n      setActivePublisher(row, rowIndex);\r\n    },\r\n  };\r\n\r\n  const { SearchBar } = Search;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"jumbotron\">\r\n        <h2 className=\"text-info text-center\">Our Books' Publishers:</h2>\r\n        <hr />\r\n        <div className=\"list row\">\r\n          <div className=\"col-md-6\">\r\n            <h4>Publishers List</h4>\r\n\r\n            <ToolkitProvider\r\n              keyField=\"id\"\r\n              data={publishers}\r\n              columns={columns}\r\n              search\r\n            >\r\n              {(props) => (\r\n                <div>\r\n                  <SearchBar {...props.searchProps} />\r\n                  <hr />\r\n                  <BootstrapTable\r\n                    {...props.baseProps}\r\n                    className=\"bg-white\"\r\n                    keyField=\"id\"\r\n                    rowEvents={tableRowEvents}\r\n                    striped\r\n                    hover\r\n                    condensed\r\n                  />\r\n                </div>\r\n              )}\r\n            </ToolkitProvider>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            {currentPublisher ? (\r\n              <div>\r\n                <h4>Publisher</h4>\r\n                <div>\r\n                  <label>\r\n                    <strong>Name:</strong>\r\n                  </label>{\" \"}\r\n                  {currentPublisher.name}\r\n                </div>\r\n                <div>\r\n                  <label>\r\n                    <strong>Location:</strong>\r\n                  </label>{\" \"}\r\n                  {currentPublisher.location}\r\n                </div>\r\n                <div>\r\n                  <label>\r\n                    <strong>Books:</strong>\r\n                  </label>{\" \"}\r\n                  {currentPublisher.books.map((book, index) => (\r\n                    <p>{book.title}</p>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <br />\r\n                <p>Please click on a Publisher...</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PublishersList;\r\n",["79","80"],"C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\App.js",[],"C:\\Users\\User\\Desktop\\Taleas\\books-client\\src\\components\\Book.js",["81","82"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport BookDataService from \"../services/BookService\";\r\nimport PublisherDataService from \"../services/PublisherService\";\r\nimport Select from \"react-select\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Book = (props) => {\r\n  const { register, handleSubmit, errors, formState } = useForm();\r\n  const [options, setOptions] = useState([]);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    getOptions();\r\n  }, []);\r\n  const initialBookState = {\r\n    id: null,\r\n    title: \"\",\r\n    author: \"\",\r\n    rating: \"\",\r\n    pages: \"\",\r\n    language: \"\",\r\n    description: \"\",\r\n    publisher: {},\r\n    published: false,\r\n  };\r\n  const [currentBook, setCurrentBook] = useState(initialBookState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const getBook = (id) => {\r\n    BookDataService.get(id)\r\n      .then((response) => {\r\n        setCurrentBook(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBook(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setCurrentBook({ ...currentBook, [name]: value });\r\n  };\r\n\r\n  const updatePublished = (status) => {\r\n    var data = {\r\n      id: currentBook.id,\r\n      title: currentBook.title,\r\n      author: currentBook.author,\r\n      rating: currentBook.rating,\r\n      pages: currentBook.pages,\r\n      language: currentBook.language,\r\n      description: currentBook.description,\r\n      publisher: options.value,\r\n      published: status,\r\n    };\r\n\r\n    BookDataService.update(currentBook.id, data)\r\n      .then((response) => {\r\n        setCurrentBook({ ...currentBook, published: status });\r\n        console.log(response.data);\r\n        history.push(\"/books\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const updateBook = () => {\r\n    BookDataService.update(currentBook.id, currentBook)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setMessage(\"The book was updated successfully!\");\r\n        history.push(\"/books\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const deleteBook = () => {\r\n    BookDataService.remove(currentBook.id)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        props.history.push(\"/books\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (formState.errors.data) return;\r\n    updateBook();\r\n  };\r\n\r\n  const getOptions = () => {\r\n    PublisherDataService.getDropDown()\r\n      .then((response) => {\r\n        setOptions(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {currentBook ? (\r\n        <div className=\"edit-form\">\r\n          <h4>Book</h4>\r\n          <form className=\"submit-form\" onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">\r\n                Title<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                ref={register({ required: true })}\r\n                id=\"title\"\r\n                name=\"title\"\r\n                value={currentBook.title}\r\n                onChange={handleInputChange}\r\n              />\r\n              <span className=\"text-danger\">\r\n                {errors.title && \"Title is required\"}\r\n              </span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"author\">\r\n                Author<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                ref={register({ required: true })}\r\n                id=\"author\"\r\n                name=\"author\"\r\n                value={currentBook.author}\r\n                onChange={handleInputChange}\r\n              />\r\n              <span className=\"text-danger\">\r\n                {errors.author && \"Author is required\"}\r\n              </span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"rating\">Rating</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                ref={register({ min: 0, max: 5 })}\r\n                id=\"rating\"\r\n                name=\"rating\"\r\n                value={currentBook.rating}\r\n                onChange={handleInputChange}\r\n              />\r\n              <span className=\"text-danger\">\r\n                {errors.rating &&\r\n                  \"Invalid number for rating. Add a number between 0 and 5.\"}\r\n              </span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"pages\">\r\n                Pages<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                ref={register({ min: 0, required: true })}\r\n                id=\"pages\"\r\n                name=\"pages\"\r\n                value={currentBook.pages}\r\n                onChange={handleInputChange}\r\n              />\r\n              <span className=\"text-danger\">\r\n                {errors.pages?.type == \"required\" && \"Pages is required\"}\r\n                {errors.pages?.type == \"min\" &&\r\n                  \"Please add a positive number for pages.\"}\r\n              </span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"language\">language</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"language\"\r\n                name=\"language\"\r\n                value={currentBook.language}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                name=\"description\"\r\n                value={currentBook.description}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Select onChange={setOptions} options={options} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>\r\n                <strong>Status:</strong>\r\n              </label>\r\n              {currentBook.published ? \"Published\" : \"Pending\"}\r\n            </div>\r\n            {currentBook.published ? (\r\n              <button\r\n                className=\"badge badge-primary mr-2\"\r\n                onClick={() => updatePublished(false)}\r\n              >\r\n                UnPublish\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"badge badge-primary mr-2\"\r\n                onClick={() => updatePublished(true)}\r\n              >\r\n                Publish\r\n              </button>\r\n            )}\r\n\r\n            <button className=\"badge badge-danger mr-2\" onClick={deleteBook}>\r\n              Delete\r\n            </button>\r\n\r\n            <button type=\"submit\" className=\"badge badge-success\">\r\n              Update\r\n            </button>\r\n            <p>{message}</p>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>Please click on a Book...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Book;\r\n",["83","84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":11,"column":27,"nodeType":"91","messageId":"92","endLine":11,"endColumn":40},{"ruleId":"89","severity":1,"message":"93","line":11,"column":42,"nodeType":"91","messageId":"92","endLine":11,"endColumn":58},{"ruleId":"89","severity":1,"message":"94","line":13,"column":10,"nodeType":"91","messageId":"92","endLine":13,"endColumn":22},{"ruleId":"95","severity":1,"message":"96","line":18,"column":6,"nodeType":"97","endLine":18,"endColumn":8,"suggestions":"98"},{"ruleId":"89","severity":1,"message":"99","line":37,"column":9,"nodeType":"91","messageId":"92","endLine":37,"endColumn":20},{"ruleId":"85","replacedBy":"100"},{"ruleId":"87","replacedBy":"101"},{"ruleId":"89","severity":1,"message":"102","line":28,"column":10,"nodeType":"91","messageId":"92","endLine":28,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":36,"column":1,"nodeType":"105","endLine":42,"endColumn":3},{"ruleId":"103","severity":1,"message":"104","line":27,"column":1,"nodeType":"105","endLine":34,"endColumn":3},{"ruleId":"89","severity":1,"message":"106","line":9,"column":10,"nodeType":"91","messageId":"92","endLine":9,"endColumn":24},{"ruleId":"89","severity":1,"message":"107","line":9,"column":26,"nodeType":"91","messageId":"92","endLine":9,"endColumn":43},{"ruleId":"89","severity":1,"message":"94","line":11,"column":10,"nodeType":"91","messageId":"92","endLine":11,"endColumn":22},{"ruleId":"89","severity":1,"message":"99","line":28,"column":9,"nodeType":"91","messageId":"92","endLine":28,"endColumn":20},{"ruleId":"85","replacedBy":"108"},{"ruleId":"87","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":182,"column":37,"nodeType":"112","messageId":"113","endLine":182,"endColumn":39},{"ruleId":"110","severity":1,"message":"111","line":183,"column":37,"nodeType":"112","messageId":"113","endLine":183,"endColumn":39},{"ruleId":"85","replacedBy":"114"},{"ruleId":"87","replacedBy":"115"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'publisherName' is assigned a value but never used.","Identifier","unusedVar","'setPublisherName' is assigned a value but never used.","'currentIndex' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrieveBooks'. Either include it or remove the dependency array.","ArrayExpression",["118"],"'refreshList' is assigned a value but never used.",["116"],["117"],"'submitted' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'publisherBooks' is assigned a value but never used.","'setPublisherBooks' is assigned a value but never used.",["116"],["117"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["116"],["117"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [retrieveBooks]",{"range":"121","text":"122"},[753,755],"[retrieveBooks]"]